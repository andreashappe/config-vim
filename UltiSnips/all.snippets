snippet pt_registration_email_once "registration email only worked once" b
\subsection{Registrations-Link funktioniert nur einmalig}

Während der Benutzerregistrierung wird eine Bestätigungsemail versendet. Der Benutzer muss mittels eines Links die Registrierung abschließen.

Dies wurde sicher implementiert:
\begin{itemize}
	\item Der Bestätigungslink kann nur einmal verwendet werden.
	\item Die verwendete UUID dürfte zufällig gewählt worden sein.
	\item Nach der Benutzerbestätigung muss der Benutzer sich nochmals mit seinem Passwort einloggen.
\end{itemize}
endsnippet

snippet pt_session_close_all "Beenden aller Sessions war nicht moeglich" b
\subsection{Beenden aller Sessions war nicht möglich}

Ein Benutzer kann sich zu einem Zeitpunkt mehrfach parallel anmelden. Dies geschieht z. B. bei der Verwendung verschiedener Endgeräte bzw. verschiedener Browser. In diesem Fall sollte ein Benutzer die Möglichkeit besitzen, alle bestehende Sessions zu beenden. Ein Use-Case für diese Funktion ist z. B. das Ausloggen aller Accounts nachdem ein Laptop gestohlen wurde – falls dies nicht möglich ist, kann ein Angreifer auf dem gestohlenen Gerät weiterhin auf die Webseiten-Funktionen zugreifen.

Es war innerhalb der Applikation möglich, die aktuelle Session zu beenden – dabei blieben jedoch ebenso geöffnete Sessions auf anderen Geräten weiterhin aktiv. Es wird empfohlen, entweder beim Logout alle aktiven Session des Benutzers zu beenden oder innerhalb der „${0}“ Ansicht sowohl aktive Session anzeigen und diese auch beenden zu können.
endsnippet

snippet pt_login_brute_force_slow "Brute-Force Angriffe gegen Login moeglich" b
\subsection{Brute-Force Angriffe gegen Login möglich}

Der Login wird mittels einem ${1:POST} Request auf ${2} durchgeführt. Hier wurde versucht mittels Brute-Force Angriffe das Passwort des Logins „${3:ah@coretec.at}“ zu finden, als Passwortliste wurden 3425 „falsche“ Passwörter gefolgt vom richtigen Passwort gewählt. Dadurch kann überprüft werden, ob eine automatische Sperre eines Accounts im Zuge eines Brute-Force Angriffs durchgeführt wird.

Es konnten keine Sperre nach erfolglosen Login-Versuchen erkannt werden. Aufgrund der geringen Geschwindigkeit (${4} Versuche/Minute, ${5} Versuche/Stunde) kann das Gefahrenpotential bei gut gewählten Passwörtern als nicht vorhanden angesehen werden.${0}
endsnippet

snippet pt_header_cors "CORS header erlaubt" b
\subsection{CORS-Konfiguration}

Moderne Webbrowser verwenden standardmäßig die sog. „Same-Origin“ Policy. Durch diese wird der Zugriff auf Ressourcen durch einen Webbrowser mittels Javascript auf Ressourcen, die sich auf dem selben Webserver wie das ausgeführte Javascript befinden, eingeschränkt.

Bei folgenden Operationen wurde mittels der „Access-Control-..“ Header der Zugriff ausgehend von externen Javascript-Funktionen erlaubt:
\begin{itemize}
	\item ${0}
\end{itemize}

Dies erlaubt es externen Webseiten (über den User-Browser) auf die bereitgestellten Operationen zuzugreifen. Falls diese Funktion nicht benötigt wird, wird empfohlen die erlaubten Domains einzuschränken.
endsnippet
